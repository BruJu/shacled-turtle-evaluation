JSON.parse('[{"date":1651594757572,"sent":{"profile":{"prof":"veryhigh","ttlexp":"high","schemaexp":"high"},"tasks":[{"id":1,"schema":"data/schema-naive-v1.ttl","corpus":"data/text01.txt","time":236201,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n[] a s:Person;\\n  s:name \\"Alexa Bosquet\\";\\n  s:address [ a s:PostalAddress; s:postalCode \\"69001\\"; s:addressLocality \\"Lyon\\"];\\n  s:nationality :Canada .\\n\\n:Canada a s:Country; s:geoTouches :USA .","stats":{"show":119,"click":6,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text02.txt","time":472840,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n[] a s:Corporation; s:name \\"ACME\\";\\n  s:department [\\n    a s:BusinessEntityType;\\n    s:department [s:name \\"legal\\"];\\n    s:telephone \\"456-489-785\\"\\n  ], [\\n    a s:BusinessEntityType;\\n    s:department [s:name \\"sales\\";\\n      s:owns [\\n        a s:Product;\\n        s:name \\"ACME Pasta\\";\\n        s:releaseDate \\"1999-08-12\\"^^rdf:date;\\n        s:slogan \\"The most random white pasta ever made\\"\\n      ]]\\n  ] .","stats":{"show":153,"click":10,"explicitelyAsked":0}}],"feedback":{"toohard":"3","equaldifficulty":"2","succeed":"4","exp1usefull":"4","exp2usefull":"4","prefer1":"3","typingisok":"4","freetext":"Completing the second example required opening schema.org documentation to find relevant properties related to what needed to be expressed. Sometimes this required creativity in finding a word that matched a relevant concept, and autocompletion wasn\'t as useful.","freewhy":""}},"_id":"1pNkvJmhEu9ixPTv"},{"date":1651590705766,"sent":{"profile":{"prof":"veryhigh","ttlexp":"high","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text01.txt","time":253228,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:AlexaBosquet a s:Person ;\\ns:address \\"7 Flower Street 69001 Lyon\\" ;\\ns:homeLocation :Lyon ;\\ns:nationality :Canada .\\n:Canada a s:Country ;\\ns:geoTouches :USA .\\n","stats":{"show":127,"click":7,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-naive-v1.ttl","corpus":"data/text02.txt","time":392178,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:ACME s:department :ACMELegal , :ACMESales ;\\na s:Corporation .\\n:ACMELegal a s:DepartmentStore ;\\ns:telephone \\"456-489-785\\"^^xsd:string .\\n:ACMESales a s:DepartmentStore ;\\ns:owns :ACMEPasta .\\n:ACMEPasta a s:Product ;\\ns:productionDate \\"1999-08-12\\"^^xsd:date ;\\ns:slogan \\"The most random white pasta ever made\\"^^xsd:string ;\\ns:productionCompany :ACME .","stats":{"show":143,"click":18,"explicitelyAsked":0}}],"feedback":{"toohard":"3","equaldifficulty":"2","succeed":"5","exp1usefull":"2","exp2usefull":"3","prefer1":"2","typingisok":"4","freetext":"No suggestions of properties were given to me in the second experiment before I typed a resource","freewhy":"The suggestion given in the second experiment were more often useful."}},"_id":"6WpLBUswoIWG5UM8"},{"date":1651587962460,"sent":{"profile":{"prof":"veryhigh","ttlexp":"high","schemaexp":"high"},"tasks":[{"id":1,"schema":"data/schema-naive-v1.ttl","corpus":"data/text01.txt","time":217486,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:AlexaBosquet a s:Person ;\\n   s:name \\"Alexa Bosquet\\" ;\\n   s:address [ s:streetAddress \\"7 Flower Streets\\" ; s:postalCode 69001 ; s:addressLocality \\"Lyon\\" ] ;\\n   s:nationality :Canada .\\n\\n:Canada a s:Country ;\\n  s:name \\"Canada\\" ;\\n   :neighbor :USA .\\n\\n:USA a s:Country ;\\n  s:name \\"United States of America\\" .\\n","stats":{"show":200,"click":9,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text02.txt","time":184565,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:ACME a s:Corporation ;\\n  s:name \\"ACME\\" ;\\n  s:department :legal , :sales .\\n\\n:legal a s:Organization ; s:name \\"ACME legal\\" ; s:telephone <tel:+1-456-489-785> .\\n:sales a s:Organization ; s:name \\"ACME sales\\" .\\n\\n:acmePasta a s:Product ; s:manufacturer :sales ; s:releaseDate \\"1999-08-12\\"^^xsd:date ; s:slogan \\"The most random white pasta ever made\\"@en .\\n","stats":{"show":182,"click":11,"explicitelyAsked":0}}],"feedback":{"toohard":"4","equaldifficulty":"1","succeed":"4","exp1usefull":"4","exp2usefull":"5","prefer1":"1","typingisok":"1","freetext":"Thank you for creating this tool!","freewhy":"The second one is better because it only suggests properties for the already written types. That\'s much better to don\'t get overload by schema.org size."}},"_id":"9dzi9zeNqyEEXdYH"},{"date":1651596333465,"sent":{"profile":{"prof":"veryhigh","ttlexp":"high","schemaexp":"high"},"tasks":[{"id":1,"schema":"data/schema-naive-v1.ttl","corpus":"data/text02.txt","time":237116,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n<acmeOrg> a s:Organization ;\\ns:hasPart <legal>, <sales> ;\\ns:name \\"ACME\\" .\\n\\n<legal> a s:Organization ;\\ns:telephone \\"456-489-785\\" .\\n\\n<sales> a s:Organization ;\\ns:produces <acmePasta> .\\n\\n<acmePasta> a s:Product ;\\ns:name \\"ACME Pasta\\" ;\\ns:description \\"The most random white pasta ever made\\" .\\n\\n","stats":{"show":185,"click":10,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text01.txt","time":177884,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n<ab> a s:Person ;\\ns:nationality <canada> ;\\ns:address <ab#address> .\\n\\n<ab#address> a s:PostalAddress ;\\ns:streetAddress \\"7 Flower Streets\\" ;\\ns:postalCode 69001 ;\\ns:addressLocality \\"Lyon\\" .\\n\\n<canada> a s:Country ;\\ns:name \\"Canada\\" ;\\ns:geoIntersects <usa> .\\n\\n<usa> a s:Country ;\\ns:name \\"USA\\" .","stats":{"show":121,"click":11,"explicitelyAsked":0}}],"feedback":{"toohard":"4","equaldifficulty":"3","succeed":"5","exp1usefull":"3","exp2usefull":"4","prefer1":"1","typingisok":"4","freetext":"Nice test, very much interested in the results. (End of the comment have been removed to preserve the volunteer anonymity)","freewhy":"Second one but it might simply be because that\'s an example I know much better from the vocab POV. I did not do too much with organizations so I was looking for companies first in the autocomplete on 1.\\n\\nAutocomplete is nice when you know the vocab as well and the terms they use. I would like to have word-net like proposals for alternative names that are not explicitly mentioned in the schema."}},"_id":"9ixQQT68l47HCHnk"},{"date":1651610361800,"sent":{"profile":{"prof":"veryhigh","ttlexp":"high","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text01.txt","time":242961,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n<AlexaBosquet>\\n  a s:Person ;\\n  s:name \\"Alexa Bosquet\\" ;\\n  s:address [\\n    s:streetAddress \\"7 Flower Streets\\" ;\\n    s:addressLocality \\"Lyon\\" ;\\n    s:postalCode \\"69001\\" ;\\n  ] ;\\n  s:nationality <Canada> ;\\n.\\n\\n<Canada> s:geoTouches <USA> ; a s:Country ; s:name \\"Canada\\".\\n<USA> a s:Country ; s:name \\"United States of America\\".\\n\\n","stats":{"show":173,"click":6,"explicitelyAsked":2}},{"id":2,"schema":"data/schema-naive-v2.ttl","corpus":"data/text02.txt","time":343234,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n<ACME>\\n  a s:Organization ;\\n  s:name \\"ACME\\" ;\\n  s:department <ACME_1>, <ACME_2> ;\\n.\\n\\n<ACME_1>\\n  # legal department?\\n  s:telephone \\"456-489-785\\" ;\\n.\\n\\n<ACME_2>\\n  # sales department?\\n  s:owns <ACME_Pasta> ;\\n.\\n\\n<ACME_Pasta>\\n  a s:Product ;\\n  s:slogan \\"The most random white pasta ever made\\" ;\\n  s:productionDate \\"1999-08-12\\"^^xsd:date\\n.\\n","stats":{"show":282,"click":9,"explicitelyAsked":15}}],"feedback":{"toohard":"4","equaldifficulty":"2","succeed":"3","exp1usefull":"4","exp2usefull":"3","prefer1":"3","typingisok":"2","freetext":"","freewhy":""}},"_id":"YlFea179DHNUAt3h"},{"date":1651598565458,"sent":{"profile":{"prof":"veryhigh","ttlexp":"medium","schemaexp":"low"},"tasks":[{"id":1,"schema":"data/schema-naive-v1.ttl","corpus":"data/text02.txt","time":787796,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:acme a s:Corporation ;\\n    s:name \\"acme\\".\\n    s:department :acme_legal , :acme_sales .\\n\\n:acme_legal s:telephone \\"456-489-785\\" .\\n:acme_sales s:owns :acme_pasta .\\n:acme_pasta\\n    s:name \\"ACME Pasta\\" ;\\n    s:releaseDate \\"1999-08-12\\" .","stats":{"show":265,"click":18,"explicitelyAsked":13}},{"id":2,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text01.txt","time":331650,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:alexa_bosquet a s:Person ;\\n    s:address [ s:streetAddress \\"Flower Streets\\" ; s:postalCode \\"69001\\" ; s:addressLocality \\"Lyon\\" ] ;\\n    s:nationality [\\n        s:name \\"Canada\\" ;\\n        s:geoTouches [ s:name \\"United States of America\\" ]\\n    ] .","stats":{"show":60,"click":8,"explicitelyAsked":0}}],"feedback":{"toohard":"3","equaldifficulty":"2","succeed":"4","exp1usefull":"4","exp2usefull":"4","prefer1":"4","typingisok":"2","freetext":"It\'s a great idea. For me personally: encoding the same example using different editors would have clarified the difference more. (But, I understand this is not a proper experiment setup, since the second one would of course be much easier!) I believe the second editor also shows a human readable description of the term, and the first one doesn\'t (if I remember correctly) (?) Or maybe only for rdf:type? ..\\n\\nI think expanding this idea of human-readable description with domains and ranges would be *very* beneficial. I often ended up having to lookup the terms at schema.org (which is partially why the first experiment took longer; the required terms were not as clear to me as for the second one). To me, domains/ranges say a lot about the meaning of a property; e.g., I\'d be able to quickly rule out start-date by looking at its domains and ranges, much more so than giving its (very vague) description.","freewhy":"Shorter but still relevant list of options."}},"_id":"bZTEI2tBKtW4HVFo"},{"date":1651591670744,"sent":{"profile":{"prof":"veryhigh","ttlexp":"high","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/schema-naive-v1.ttl","corpus":"data/text02.txt","time":796424,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix schema: <http://schema.org/> .\\n\\n:corp a schema:Corporation ; schema:department :dep1 , :dep2 .\\n:dep1 a schema:LegalService ; schema:telephone \\"456-489-785\\" .\\n:dep2 a schema:ShoppingCenter ; schema:owns :product .\\n:product a schema:productionDate \\"1999-08-12\\"^^xsd:date ; schema:slogan \\"The most random white pasta ever made\\"@en .\\n","stats":{"show":70,"click":0,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text01.txt","time":274963,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix schema: <http://schema.org/> .\\n\\n:Alexa a schema:Person ; schema:address :adr ; schema:nationality :Canada .\\n:adr a schema:PostalAddress ; schema:streetAddress \\"7 Flower Streets\\" ; schema:postalCode 690001 ; schema:addressLocality \\"Lyon\\".\\n:Canada a schema:Country ; schema:geoTouches :States; schema:name \\"Canada\\".\\n:States a schema:Country ; schema:name \\"United States of America\\".","stats":{"show":170,"click":12,"explicitelyAsked":0}}],"feedback":{"toohard":"1","equaldifficulty":"5","succeed":"3","exp1usefull":"3","exp2usefull":"5","prefer1":"3","typingisok":"1","freetext":"Bonjour,\\n\\nJ\'ai perdu du temps dans le premier teste car je n\'ai pas vu que le prefix de schema c\'est \\"s\\" ! je faisais \\"schema:\\" et je me dis pourquoi ça marche pas ! lol \\nJoli outil! bravo ! \\n\\nSi vous pouvez faire un plugin pour intellij pourqu\'il corrige les codes turtles , nottament le turtle à l\'intérieur des sparql  des SHACL ça sera TOP\\n\\nBonne continuation ;) ~~~~~~ Translation: Hello, I lost time in the first corpus because I didn\'t see that the prefix for schema is \\"s\\". I was writing \\"schema:\\" and wondering why it didn\'t work! lol Nice tool! good job! If you would make a plugin for Intellij to fix turtle code, especially turlte inside SPARQL queries and shacl graphs it would be really great. Good continuation ;)","freewhy":""}},"_id":"dfAqvpL1znYKKVum"},{"date":1651587541665,"sent":{"profile":{"prof":"veryhigh","ttlexp":"high","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text02.txt","time":276776,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:acme a s:Corporation.\\n:acme s:subOrganization :legal_dpt.\\n:legal_dpt s:telephone \\"456-489-785\\".\\n:acme s:subOrganization :sales_dpt.\\n:sales_dpt s:owns :product.\\n:product a s:Product.\\n:product s:slogan \\"The most random white pasta ever made\\"@en.\\n:product s:name \\"ACME Pasta\\".\\n:product s:releaseDate \\"1999-08-12\\".","stats":{"show":174,"click":16,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-naive-v1.ttl","corpus":"data/text01.txt","time":231536,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:Alexa a s:Person.\\n:Alexa s:address :addr_alexa.\\n:addr_alexa a s:PostalAddress.\\n:addr_alexa s:postalCode \\"69001\\".\\n:addr_alexa s:addressLocality \\"Lyon\\".\\n:addr_alexa s:streetAddress \\"7 Flower Streets\\".\\n:Alexa s:nationality :canada.\\n:canada a s:Country.\\n:canada s:geoTouches :usa.\\n:usa a s:Country.\\n\\n","stats":{"show":184,"click":20,"explicitelyAsked":0}}],"feedback":{"toohard":"4","equaldifficulty":"4","succeed":"4","exp1usefull":"4","exp2usefull":"3","prefer1":"4","typingisok":"3","freetext":"","freewhy":""}},"_id":"lFTLkjNql3XdlorS"},{"date":1651596583550,"sent":{"profile":{"prof":"veryhigh","ttlexp":"high","schemaexp":"high"},"tasks":[{"id":1,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text01.txt","time":245546,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:alexa a s:Person;\\ns:address :alexaA;\\ns:nationality <http://www.wikidata.org/entity/Q2569593>.\\n\\n:alexaA a s:PostalAddress;\\ns:streetAddress \\"7 Flower Streets\\";\\ns:postalCode \\"69001\\";\\ns:addressLocality \\"Lyon\\".\\n\\n","stats":{"show":144,"click":11,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-naive-v1.ttl","corpus":"data/text02.txt","time":206653,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:acme a s:Corporation;\\ns:name \\"ACME\\";\\ns:department :acmed1;\\ns:department :acmed2.\\n\\n:acmed1 a s:Organization;\\ns:name \\"Legal Departement\\";\\ns:telephone \\"456 489 785\\";\\n\\n:acmed1 a s:Organization;\\ns:name \\"Sales Departement\\";\\ns:produces :acmepasta.\\n\\n:acmepasta a s:Product;\\ns:availabilityStarts \\"1999-08-10\\"^^xsd:date;\\ns:slogan \\"The most random white pasta ever made\\".\\n\\n","stats":{"show":133,"click":11,"explicitelyAsked":0}}],"feedback":{"toohard":"1","equaldifficulty":"4","succeed":"5","exp1usefull":"4","exp2usefull":"4","prefer1":"2","typingisok":"2","freetext":"","freewhy":"I could not see a difference, you should probably prime the people to look what is different."}},"_id":"lpg4xYFibYJUaizN"},{"date":1651594323430,"sent":{"profile":{"prof":"veryhigh","ttlexp":"medium","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text02.txt","time":1265297,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:acme s:department _:1, _:2 ;\\n    a s:Corporation.\\n\\n_:1 rdf:type s:LegalService;\\n    s:telephone \\"456-489-785\\".\\n\\n_:2 s:owns _:3;\\n    s:description \\"Sales department\\";\\n    a s:Organization.\\n\\n_:3 a s:Product;\\n    s:name \\"ACME Pasta\\";\\n    s:releaseDate \\"1999-08-12\\";\\n    s:slogan \\"The most random white pasta ever made\\".","stats":{"show":137,"click":7,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-naive-v1.ttl","corpus":"data/text01.txt","time":466281,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:bosquet a s:Person ;\\n    s:address [\\n        s:streetAddress \\"7 Flower Streets\\";\\n        s:postalCode \\"69001\\" ;\\n        s:addressLocality \\"Lyon\\"\\n    ];\\n    s:nationality [\\n        a s:Country;\\n        s:name \\"Canada\\";\\n        s:geoTouches [\\n           a s:Country;\\n           s:name \\"United States of America\\"\\n        ]\\n    ].\\n\\n","stats":{"show":116,"click":10,"explicitelyAsked":0}}],"feedback":{"toohard":"4","equaldifficulty":"2","succeed":"3","exp1usefull":"2","exp2usefull":"4","prefer1":"2","typingisok":"4","freetext":"None of the two cases seemed to reliably recognize the type of the object, though the schema.org web site seems to indicate an RDF schema that could be used for that purpose. E.g., I used the property \\"s:address\\", with a blank node as an object; per schema.org that can only be a PostalAddress, that could have come up with the right possible terms but I still had to look for streetAddress...\\n\\nNote that the Sales Department problem above may well be a problem with the schema.org vocabulary per se.","freewhy":"The second one gave may have given more hints as for the properties or types to be used from schema.org. \\"more\\" but not complete either, I had to fall back on simply searching manually through schema.org. The first example was fairly frustrating, and I do not think what I did was satisfactory;  I could not locate a suitable type for a \\"Sales Department\\" and the \\"Legal Department\\" encoding does not sound right either."}},"_id":"uUW54YWcCvmJASe2"},{"date":1651672735156,"sent":{"profile":{"prof":"veryhigh","ttlexp":"medium","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text01.txt","time":275601,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:alexa a s:Person ; s:address :address .\\n:address a s:PostalAddress ; s:streetAddress \\"7 Flower Streets\\" ; s:postalCode 69001 ; s:addressLocality \\"Lyon\\" .\\n:alexa s:nationality \\"Canadian\\" .\\n","stats":{"show":71,"click":10,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-naive-v2.ttl","corpus":"data/text02.txt","time":259296,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:acme a s:Corporation .\\n:acme s:department :legal .\\n:legal s:telephone \\"456-489-785\\" .\\n:acme s:department :sales .\\n:sales s:owns :acmepasta .\\n:acmepasta a s:Product ; s:startDate \\"1999-08-12\\"^^xsd:date .\\n:acmepasta s:slogan \\"The most random white pasta ever made\\" .\\n\\n","stats":{"show":115,"click":17,"explicitelyAsked":0}}],"feedback":{"toohard":"5","equaldifficulty":"2","succeed":"4","exp1usefull":"4","exp2usefull":"4","prefer1":"3","typingisok":"5","freetext":"/","freewhy":"I found the 2nd task slightly easier. Not sure if because of completion engine."}},"_id":"2uAUvYpKZQanQ7h7"},{"date":1651679206814,"sent":{"profile":{"prof":"medium","ttlexp":"medium","schemaexp":"low"},"tasks":[{"id":1,"schema":"data/schema-naive-v2.ttl","corpus":"data/text01.txt","time":801487,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:UnitedStates a s:Country .\\n:Canada a s:Country ;\\ns:geoTouches :UnitedStates .\\n:Lyon a s:Place .\\n\\n:AlexaBosquet a s:Person ;\\ns:homeLocation :Lyon ;\\ns:address [ s:addressLocality \\"7 Flower Streets\\"@en ; \\ns:postalCode \\"69001\\" ] ;\\ns:nationality :Canada .\\n\\n","stats":{"show":228,"click":15,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text02.txt","time":593243,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:LegalDepartment a s:Organization ;\\ns:telephone \\"456-489-785\\" .\\n\\n:ACMEPasta a s:Product ;\\ns:productionDate \\"19990812\\"^^xsd:date ;\\ns:slogan \\"The most random white pasta ever made\\"@en .\\n\\n:SalesDepartment a s:Organization ;\\ns:owns :ACMEPasta .\\n\\n:ACME a s:Organization ;\\ns:department :LegalDepartment , :SalesDepartment .\\n\\n","stats":{"show":158,"click":14,"explicitelyAsked":0}}],"feedback":{"toohard":"2","equaldifficulty":"4","succeed":"4","exp1usefull":"4","exp2usefull":"5","prefer1":"2","typingisok":"2","freetext":"","freewhy":"Since I am not familiar with schema ontology, It took me more time to think about types and properties and I was confused when having all suggestions since I did not know which was more accurate. In the second case, I had fewer choices so It was quick, but the accuracy of the answer depends on the engine\'s accuracy itself.  I think the situation could be different with an ontology I master."}},"_id":"4yQ8QyyfnioAP4ZW"},{"date":1651668184131,"sent":{"profile":{"prof":"veryhigh","ttlexp":"high","schemaexp":"high"},"tasks":[{"id":1,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text01.txt","time":1718916,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n@prefix dbr: <http://dbpedia.org/resource/> .\\n\\n:alexa a s:Person;\\n  s:givenName \\"Alexa\\";\\n  s:familyName \\"Bosquet\\";\\n  s:address [\\n    a s:PostalAddress;\\n    s:description \\"7 Flower Streets, 69001 Lyon, France\\";\\n    s:addressCountry [\\n      a s:Country;\\n      s:name \\"France\\";\\n    ];\\n    s:postalCode \\"69001\\";\\n    s:addressLocality \\"Lyon\\";\\n    s:streetAddress \\"7 Flower Streets\\"\\n  ];\\n  s:nationality [\\n    a s:Country;\\n    s:name \\"Canada\\";\\n    s:geoTouches [\\n      a s:Country;\\n      s:name \\"The United States of America\\";\\n    ]\\n  ] .","stats":{"show":170,"click":13,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-naive-v2.ttl","corpus":"data/text02.txt","time":1487728,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:acme a s:Corporation;\\n  s:name \\"ACME\\";\\n  s:department :acmeLegalDpt, :acmeSalesDpt .\\n:acmeLegalDpt a s:LegalService;\\n  s:description \\"Legal department of ACME corporation\\"@en;\\n  s:telephone \\"456-489-758\\";\\n  s:parentOrganization :acme\\n] .\\n:acmeSalesDpt a s:Organization;\\n  s:description \\"Sales department of ACME corporation\\"@en;\\n  s:parentOrganization :acme;\\n  s:owns [\\n    a s:OwnershipInfo;\\n    s:acquiredFrom :acme;\\n    s:ownedFrom \\"1999-08-12\\";\\n    s:typeOfGood :acmePasta\\n  ] .\\n:acmePasta a s:Product;\\n  s:slogan \\"The most random white pasta ever made\\"@en;\\n  s:name \\"ACME Pasta\\";\\n  s:releaseDate \\"1999-08-12\\" .","stats":{"show":432,"click":22,"explicitelyAsked":0}}],"feedback":{"toohard":"4","equaldifficulty":"5","succeed":"5","exp1usefull":"4","exp2usefull":"4","prefer1":"3","typingisok":"1","freetext":"At first, I was not sure if I was allowed to, or was expected to, use other vocabularies or external identifiers. I had a hard time finding a schema.org relation that expresses the shared border between Canada and USA (I did not even think of typing \\"touches\\"), so I tried looking for such a relation in other vocabularies. I found that the Geopolitical ontology from the FAO has such a relation between countries, but the ontology is not available anymore, that I refrained from using it. In the end, I found the relation on schema.org, and I continued the experiment with the idea of not relying on anything external.\\nFor me, the autocomplete tool was just useful to speed up editing when I already knew what to type, but most of the time spent was consulting the Schema.org documentation. Sometimes, even if the name of a property or class matches what I was looking for, the specification says that it should only be used in a context that does not necessarily match the original intuition.\\nAs a result, I find that this experiment is more an exercise in using Schema.org rather than an exercise in using the autocomplete tool. I am wondering how the tool helps for general purpose Turtle editing excluding the schema.org vocabulary. The editor above is missing an auto-prefix feature, as in YASGUI, or its fork, the Turtle editor YATE, that also has a form of autocomplete for properties and classes, though not as powerful.","freewhy":"I did not realise that the completion engines were different. I did not pay attention to this. See my other comments."}},"_id":"GymBTsxHR6gz8oVC"},{"date":1651679649323,"sent":{"profile":{"prof":"high","ttlexp":"low","schemaexp":"low"},"tasks":[{"id":1,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text01.txt","time":904135,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n:AlexaBosquet rdf:type s:Person;\\ns:address :AlexaBosquetAdress;\\ns:nationality \'Canada\'.\\n:AlexaBosquetAdress s:addressLocality \'Lyon\';\\ns:addressCountry \'France\';\\ns:streetAddress \'7 Flower Streets\'.\\n","stats":{"show":135,"click":8,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-naive-v2.ttl","corpus":"data/text02.txt","time":1006368,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/>.\\n\\n:ACME rdf:type s:Corporation;\\ns:name \'ACME\';\\ns:department :D1;\\ns:department :D2.\\n:D1 s:telephone \'456-489-785\'.\\n","stats":{"show":168,"click":9,"explicitelyAsked":0}}],"feedback":{"toohard":"5","equaldifficulty":"2","succeed":"1","exp1usefull":"2","exp2usefull":"1","prefer1":"3","typingisok":"4","freetext":"","freewhy":""}},"_id":"OmlAakWKvidKccJQ"},{"date":1651647453897,"sent":{"profile":{"prof":"high","ttlexp":"medium","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/schema-naive-v2.ttl","corpus":"data/text01.txt","time":359369,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:alexa rdf:type s:Person; s:name \\"Alexa\\"; s:familyName \\"Boucher\\"; s:address :alexaAddress; s:nationality :canada.\\n:alexaAddress rdf:type s:PostalAddress; s:streetAddress \\"7 Flower Streets\\"; s:postalCode \\"69001\\"; s:addressLocality \\"Lyon\\" .\\n:canada rdf:type s:Country; s:name \\"Canada\\"; s:geoTouches :usa .\\n:usa rdf:type s:Country; s:name \\"United States of America\\" .","stats":{"show":95,"click":5,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text02.txt","time":299635,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:acme rdf:type s:Corporation; s:department :legalDept, :salesDept .\\n:legalDept rdf:type s:Corporation; s:telephone \\"456-489-785\\".\\n:salesDept rdf:type s:Corporation; s:produces :pastaProduct .\\n:pastaProduct rdf:type s:Product; s:productionDate \\"1999-08-12\\";  s:slogan \\"The most random white pasta ever made\\" .","stats":{"show":58,"click":6,"explicitelyAsked":0}}],"feedback":{"toohard":"2","equaldifficulty":"5","succeed":"4","exp1usefull":"4","exp2usefull":"4","prefer1":"3","typingisok":"3","freetext":"The one not expecting type, of course, provides more \\"noise\\" in the suggestions\\nBut I understand that if people have no background in schema.org ontology this could help\\nEvery suggested term should come with its definition. So, it leads you to choose only with a \\"label\\". For example the definition for rdfs:comment for schema:department was not proposed","freewhy":""}},"_id":"Rf3vRjDOufYjLhPX"},{"date":1651669727811,"sent":{"profile":{"prof":"medium","ttlexp":"low","schemaexp":"low"},"tasks":[{"id":1,"schema":"data/schema-naive-v2.ttl","corpus":"data/text02.txt","time":313400,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:acme s:department :legal,\\n                   :sales.\\n:legal s:name \\"Legal\\";\\n       s:telephone \\"456-489-785\\".\\n:sales s:name \\"Sales\\";\\n       s:owns :acmepasta.\\n:acmepasta s:slogan \\"The most random white pasta ever made\\";\\n           s:productionDate \\"1999-09-12\\"^^xsd:date.","stats":{"show":174,"click":9,"explicitelyAsked":4}},{"id":2,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text01.txt","time":340753,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:ab rdf:type s:Person;\\n    s:name \\"Alexa Bosquet\\";\\n    s:PostalAddress :aba;\\n    s:nationality :ca.\\n:aba rdf:type s:PostalAddress;\\n     s:postalCode \\"69001\\";\\n     s:streetAddress \\"7 Flower Streets\\";\\n     s:addressLocality \\"Lyon\\".\\n:ca rdf:type s:Country;\\n    s:name \\"Canada\\";\\n    s:geoTouches :usa.\\n:usa rdf:type s:Country;\\n     s:name \\"United States of America\\".","stats":{"show":160,"click":18,"explicitelyAsked":36}}],"feedback":{"toohard":"4","equaldifficulty":"2","succeed":"4","exp1usefull":"5","exp2usefull":"5","prefer1":"2","typingisok":"2","freetext":"","freewhy":"I prefered the second approach. Without explanation on which version limited its suggestions based on types of the subject, I would have a hard time guessing which one did what, simply because there are just so many properties available. Nonetheless, limiting the amount of properties to only show the ones that are supposed to be added to that specific type of subject gives some piece of mind that we are not adding incorrect properties, or ones with very similar names from other ontologies."}},"_id":"dOfOeqqvfxmPXPlu"},{"date":1651665392645,"sent":{"profile":{"prof":"veryhigh","ttlexp":"high","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/schema-naive-v2.ttl","corpus":"data/text01.txt","time":296021,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:alexa rdf:type s:Person ;\\n  s:name \\"Alexa Bosquet\\" ;\\n  s:PostalAddress :alexa_address ;\\n  s:nationality :canada .\\n\\n:alexa_address rdf:type s:PostalAddress ;\\n  s:streetAddress \\"7 Flower Streets\\" ;\\n  s:postalCode \\"69001\\" ;\\n  s:addressLocality \\"Lyon\\" .\\n\\n:canada rdf:type s:Country ;\\n  s:geoTouches :usa .\\n:usa rdf:type s:Country .","stats":{"show":160,"click":18,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text02.txt","time":357938,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:acme rdf:type s:Organization ;\\n  s:department :legal_dpt ;\\n  s:department :sales_dpt ;\\n  s:legalName \\"ACME\\" .\\n\\n:legal_dpt rdf:type s:Organization ;\\n  s:telephone \\"456-489-785\\" .\\n\\n:sales_dpt rdf:type s:Organization ;\\n  s:owns :acme_pasta .\\n\\n:acme_pasta rdf:type s:Product ;\\n  s:productionDate \\"1999-08-12\\"^^xsd:date ;\\n  s:name \\"ACME Pasta\\" ;\\n  s:slogan \\"The most random white pasta ever made\\" .","stats":{"show":249,"click":19,"explicitelyAsked":0}}],"feedback":{"toohard":"1","equaldifficulty":"5","succeed":"5","exp1usefull":"5","exp2usefull":"5","prefer1":"2","typingisok":"1","freetext":"","freewhy":""}},"_id":"esi1uSEsWUqbSjuy"},{"date":1651664507078,"sent":{"profile":{"prof":"veryhigh","ttlexp":"high","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/schema-naive-v2.ttl","corpus":"data/text02.txt","time":328216,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n<ACME> s:department [s:telephone \\"456-489-785\\"],[s:owns [s:name \\"ACME Pasta\\";s:releaseDate \\"1999-08-120\\"; s:slogan \\"The most random white pasta ever made\\"]].","stats":{"show":177,"click":5,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text01.txt","time":244701,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n[a s:Person;s:name \\"Alexa Bosquet\\"; s:address [s:postalCode \\"69001\\"; s:addressLocality \\"Lyon\\"; s:streetAddress \\"7 Flower Streets\\"]; s:nationality [s:name \\"Canada\\"; s:geoTouches [s:name \\"United States of America\\"]]].","stats":{"show":117,"click":10,"explicitelyAsked":0}}],"feedback":{"toohard":"1","equaldifficulty":"5","succeed":"4","exp1usefull":"5","exp2usefull":"4","prefer1":"5","typingisok":"5","freetext":"","freewhy":""}},"_id":"fffFtPJDQFHbMEbQ"},{"date":1651690568499,"sent":{"profile":{"prof":"veryhigh","ttlexp":"medium","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/schema-naive-v1.ttl","corpus":"data/text01.txt","time":329509,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:alexa_bosquet a s:Person .\\n:alexa_bosquet s:address [ \\n   a s:PostalAddress ;\\n   s:streetAddress \\"7 Flower Streets\\" ;\\n   s:postalCode \\"69001\\" ;\\n   s:addressLocality \\"Lyon\\"\\n] .\\n:alexa_bosquet s:nationality :canada .\\n:canada a s:Country .\\n:canada s:geoTouches :usa .","stats":{"show":98,"click":11,"explicitelyAsked":3}},{"id":2,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text02.txt","time":368589,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:acme a s:Corporation .\\n:acme s:department :sales .\\n:sales s:owns :acme_pasta .\\n:acme_pasta a s:Product .\\n:acme_pasta s:productionDate \\"1999-08-12\\" .\\n:acme_pasta s:slogan \\"The most random white pasta ever made\\" .\\n:acme s:department :legal .\\n:legal s:telephone \\"456-489-785\\" .","stats":{"show":203,"click":12,"explicitelyAsked":0}}],"feedback":{"toohard":"4","equaldifficulty":"2","succeed":"4","exp1usefull":"4","exp2usefull":"4","prefer1":"3","typingisok":"2","freetext":"Schema.org\'s inconsistent naming conventions made this more difficult than it needed to be. E.g. what the direction of the `s:department` predicate?","freewhy":"I preferred the type-aware autocompletion as it gave me feedback on whether I was using the vocabulary correctly."}},"_id":"g3zuW0mUzlwqoenU"},{"date":1651668768842,"sent":{"profile":{"prof":"medium","ttlexp":"medium","schemaexp":"low"},"tasks":[{"id":1,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text02.txt","time":371495,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:ACME a s:Corporation ;\\n   s:name \\"ACME\\" ;\\n   s:department :ACMELegal, :ACMESales ;\\n   .\\n\\n:ACMELegal s:name \\"ACME legal department\\" ; # Couldn\'t find class for \\"Department\\"\\n    s:telephone \\"456-489-785\\"\\n    .\\n\\n:ACMESales s:name \\"ACME sales department\\" ;\\n    s:telephone \\"456-489-785\\";\\n    s:owns :ACMEPasta ;\\n    .\\n\\n:ACMEPasta a s:Product ;\\n    s:name \\"ACME Pasta\\" ;\\n    # couldn\'t find property for \\"produced since\\"\\n    s:slogan \\"The most random white pasta ever made\\"@en ;\\n    .","stats":{"show":254,"click":10,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-naive-v2.ttl","corpus":"data/text01.txt","time":235047,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:AlexaBosquet a s:Person ;\\n    s:name \\"Alexa Bosquet\\" ;\\n    s:address \\"7 Flower Streets, Lyon, 69001\\"@en ;\\n    s:streetAddress \\"7 Flower Streets\\"@en ;\\n    s:postalCode 69001 ;\\n    s:addressLocality :Lyon ;\\n    s:nationality :Canada ;\\n    .\\n\\n:Lyon a s:Place;\\n    s:name \\"Lyon\\"@en ;\\n    .\\n\\n:Canada a s:Place ;\\n    s:name \\"Canada\\"@en ;\\n    s:geoTouches :USA ;\\n    .\\n\\n:USA a s:Place ;\\n    s:name \\"United States of America\\"@en ;\\n    s:geoTouches :Canada ;\\n    .\\n\\n\\n\\n","stats":{"show":246,"click":13,"explicitelyAsked":0}}],"feedback":{"toohard":"5","equaldifficulty":"4","succeed":"4","exp1usefull":"4","exp2usefull":"4","prefer1":"4","typingisok":"5","freetext":"I needed more information about when I can use a certain property and for what purpose. Some of the address related properties I used in the second exercise, I wasn\'t sure if they were being used correctly. Generally I would jump over to the schema.org website and check out the ranges, but I didn\'t do that here.","freewhy":"Didn\'t notice they were different until seeing this question!"}},"_id":"gveBGgXHxNXRMc5Z"},{"date":1651665253335,"sent":{"profile":{"prof":"veryhigh","ttlexp":"medium","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/schema-naive-v2.ttl","corpus":"data/text01.txt","time":279944,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix schema: <http://schema.org/> .\\n\\n:alexa a schema:Person;\\n  schema:address :address;\\n  schema:nationality :Canada.\\n:Canada a schema:Country;\\n  schema:name \\"Canada\\";\\n  schema:geoTouches :USA.\\n:address a schema:PostalAddress;\\n        schema:streetAddress \\"7 Flower streets\\";\\n        schema:postalCode \\"690001\\";\\n        schema:addressLocality \\"Lyon\\".\\n","stats":{"show":254,"click":7,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text02.txt","time":264860,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix schema: <http://schema.org/> .\\n\\n:acme a schema:Organization;\\n    schema:name \\"ACME\\";\\n    schema:department :legal, :sales.\\n:legal a schema:Organization;\\nschema:name \\"ACME legal\\";\\nschema:telephone \\"456-489-785\\".\\n:sales a schema:Organization;\\n  schema:name \\"ACME Sales\\";\\n  schema:owns :acmepasta.\\n:acmepasta a schema:Product;\\n  schema:name \\"ACME Pasta\\";\\n  schema:releaseDate \\"1999-08-12\\";\\n  schema:slogan \\"The most random white pasta ever made\\".","stats":{"show":271,"click":10,"explicitelyAsked":0}}],"feedback":{"toohard":"3","equaldifficulty":"4","succeed":"4","exp1usefull":"3","exp2usefull":"4","prefer1":"2","typingisok":"2","freetext":"Perhaps an extra step to familiarize users with the suggestion system before comparing both would be recommended. I personally was confused a bit because I typically use the schema prefix instead of s and hadn\'t noticed the use of just `s` on the first test.","freewhy":"I think my preference for the second one is a bit biased, as I was still getting familiar with the suggestion system in the first task. On the second task it definitely felt more intuitive. "}},"_id":"oDcleQJZ6p7WeMRZ"},{"date":1651666595969,"sent":{"profile":{"prof":"high","ttlexp":"low","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/schema-naive-v2.ttl","corpus":"data/text02.txt","time":279941,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n[\\ns:name \\"ACME\\" ;\\ns:department [\\ns:telephone \\"456-489-785\\" ;\\ns:name \\"legal department\\"\\n], [\\ns:name \\"sales\\" ;\\ns:owns [\\ns:name \\"ACME pasta\\" ;\\na s:Product ;\\ns:dateCreated \\"1999-08-12\\" ;\\ns:slogan \\"The most random white pasta ever made\\"\\n]\\n]\\n] .","stats":{"show":136,"click":7,"explicitelyAsked":0}},{"id":2,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text01.txt","time":165934,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n[\\nrdf:type s:Person ;\\ns:name \\"Alexa Bosquet\\" ;\\ns:address [\\ns:postalCode \\"69001\\" ;\\ns:streetAddress \\"7 flower streets\\" ;\\ns:addressLocality \\"Lyon\\"\\n] ;\\ns:nationality \\"Canada\\"\\n] .","stats":{"show":126,"click":12,"explicitelyAsked":0}}],"feedback":{"toohard":"4","equaldifficulty":"4","succeed":"3","exp1usefull":"4","exp2usefull":"4","prefer1":"3","typingisok":"4","freetext":"The autocompletion was a bit buggy in the possibilities suggested.\\nAt the very least:\\n1. the engine should only propose IRIs (free text/literal autocompletion is really not useful and actually distracting)\\n2. the engine should not try to be too clever (I don\'t want to have to ever choose a type before autocompletion kicks in)\\n3. the engine should really allow me to express anything via fuzzy free text search on label of properties (that\'s it really)\\n\\nAdditionally, it would be nice if there was a clearer indication of the recommended shapes (I recon that would be hard to get right).","freewhy":"Suggestions for autocompletion should always be available."}},"_id":"xd1jiTNSet3C84em"},{"date":1651781247403,"sent":{"profile":{"prof":"veryhigh","ttlexp":"medium","schemaexp":"high"},"tasks":[{"id":1,"schema":"data/schema-shacledturtle.ttl","corpus":"data/text02.txt","time":406473,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:ACME a s:LocalBusiness .\\n:ACME s:name \\"ACME\\" .\\n:ACME s:department :ACMELegal .\\n:ACME s:department :ACMESales .\\n\\n:ACMELegal s:telephone \\"456-489-785\\" .\\n:ACMELegal s:name \\"ACMME legal department\\"\\n\\n:ACMESales s:owns :ACMEPasta .\\n:ACMESales s:name \\"ACME sales department\\" .\\n\\n:ACMEPasta a s:Product .\\n:ACMEPasta s:productionDate \\"1999-08-12\\"^xsd:date .\\n:ACMEPasta s:slogan \\"The most random white pasta ever made\\" .","stats":{"show":303,"click":17,"explicitelyAsked":2}},{"id":2,"schema":"data/schema-naive-v2.ttl","corpus":"data/text01.txt","time":263110,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix s: <http://schema.org/> .\\n\\n:AlexaBosquet a s:Person .\\n:AlexaBosquet s:name \\"Alexa Bosquet\\" .\\n:AlexaBosquet s:address :AlexaBosquetAddress .\\n:AlexaBosquetAddress a s:PostalAddress .\\n:AlexaBosquetAddress s:streetAddress \\"7 Flower Streets\\" ;\\n  s:postalCode \\"69001\\" ;\\n  s:addressLocality \\"Lyon\\" .\\n:AlexaBosquet s:nationality :Canada .\\n:Canada a s:Country .\\n:USA a s:Country .\\n:Canada s:name \\"Canada\\" .\\n:USA s:name \\"United States of America\\" .\\n:Canada s:geoTouches :USA .","stats":{"show":227,"click":18,"explicitelyAsked":0}}],"feedback":{"toohard":"3","equaldifficulty":"4","succeed":"4","exp1usefull":"4","exp2usefull":"4","prefer1":"3","typingisok":"3","freetext":"Auto-complete for literal datatypes would be nice\\n\\nThe selected entry in the auto-complete list should be highlighted more clearly (with a background color, maybe).","freewhy":""}},"_id":"UkjHEGQ9bgeEinqN"},{"date":1651735778971,"sent":{"profile":{"prof":"veryhigh","ttlexp":"medium","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/foaf-shacledturtle.ttl","corpus":"data/text_foaf01.txt","time":275890,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:alexa a foaf:Person;\\nfoaf:made :paper.\\n\\n:paper a foaf:Document;\\nfoaf:isPrimaryTopicOf [a foaf:Document];\\n foaf:name \\"Towards a paper starting with towards\\";\\n foaf:depiction [\\na foaf:Image;\\nfoaf:thumbnail <https://example.org/ex.svg>\\n ].\\n","stats":{"show":110,"click":12,"explicitelyAsked":3}},{"id":2,"schema":"data/foaf-naive.ttl","corpus":"data/text_foaf02.txt","time":339924,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:charlies_account foaf:name \\"Charlie\'s account\\"; a foaf:OnlineAccount; foaf:accountServiceHomepage :homepage.\\n\\n:homepage foaf:name \\"Big Company Homepage\\".\\n\\n:charlie_red a foaf:Person; foaf:account :charlies_account.\\n:big_compay a foaf:Group; foaf:name \\"Big Company\\"; foaf:homepage :homepage; foaf:member :charlie_red, :member.","stats":{"show":187,"click":15,"explicitelyAsked":2}}],"feedback":{"toohard":"1","equaldifficulty":"3","succeed":"4","exp1usefull":"4","exp2usefull":"4","prefer1":"3","typingisok":"3","freetext":"","freewhy":"I didn\'t notice any difference to be honest. "}},"_id":"cdKgfTkL7nEUA4eR"},{"date":1651738341203,"sent":{"profile":{"prof":"veryhigh","ttlexp":"high","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/foaf-naive.ttl","corpus":"data/text_foaf01.txt","time":405028,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:alexaBosquet a foaf:Person;\\n   foaf:name \\"Alexa Bosquet\\";\\n   foaf:gender \\"female\\";\\n   foaf:publications :doc.\\n\\n:doc a foaf:Document;\\n  foaf:primaryTopic \\"Towards a paper starting with towards\\";\\n  foaf:depiction :img .\\n\\n:img a foaf:Image;\\n  foaf:thumbnail <https://example.org/ex.svg>.\\n","stats":{"show":270,"click":13,"explicitelyAsked":0}},{"id":2,"schema":"data/foaf-shacledturtle.ttl","corpus":"data/text_foaf02.txt","time":407571,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:account a foaf:OnlineAccount;\\n   foaf:name \\"Charlie\'s account\\";\\n   foaf:accountServiceHomepage \\"Big Company Homepage\\" .\\n\\n:charlie a foaf:Person;\\n   foaf:name \\"Charlie Red\\";\\n   foaf:account :account. \\n\\n:company a foaf:Group;\\n  foaf:name \\"Big Company\\";\\n  foaf:homepage \\"Big Company Homepage\\";\\n  foaf:member :charlie, :someone.\\n\\n:someone a foaf:Person . \\n","stats":{"show":221,"click":17,"explicitelyAsked":0}}],"feedback":{"toohard":"4","equaldifficulty":"2","succeed":"4","exp1usefull":"5","exp2usefull":"5","prefer1":"2","typingisok":"1","freetext":"","freewhy":"The second one seemed to filter the possible properties by class"}},"_id":"qyQ6sqH3HVbt5ToF"},{"date":1651758958200,"sent":{"profile":{"prof":"veryhigh","ttlexp":"high","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/foaf-shacledturtle.ttl","corpus":"data/text_foaf04.txt","time":337895,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n_:a a foaf:Person;\\n  foaf:name \\"Charlie Red\\" ;\\n  foaf:account _:account.\\n_:account foaf:name \\"Charlie\'s account\\";\\n  foaf:accountServiceHomepage \\"https://example.org/bigcompany\\".\\n_:s foaf:account _:account ;\\n  foaf:homepage \\"https://example.org/bigcompany\\".\\n_:b a foaf:Group ;\\n  foaf:name \\"Big Company\\" ;\\n  foaf:member _:a, _:b;\\n    foaf:homepage \\"https://example.org/bigcompany\\".\\n\\n","stats":{"show":246,"click":12,"explicitelyAsked":5}},{"id":2,"schema":"data/foaf-naive.ttl","corpus":"data/text_foaf03.txt","time":151297,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n_:a a foaf:Person ;\\n  foaf:name \\"Alexa Bosquet\\";\\n  foaf:firstName \\"Alexa\\" ;\\n  foaf:publications _:pubs .\\n_:pubs :paper _:paper .\\n_:paper foaf:name \\"The perfect self-portrait\\" ;\\n  a foaf:Document ;\\n  foaf:primaryTopic :img .\\n:img a foaf:Image ;\\n  foaf:depicts _:a ;\\n  foaf:thumbnail \\"https://example.org/ex.png\\".\\n","stats":{"show":179,"click":11,"explicitelyAsked":0}}],"feedback":{"toohard":"3","equaldifficulty":"4","succeed":"2","exp1usefull":"3","exp2usefull":"3","prefer1":"3","typingisok":"2","freetext":"The lookup function seems like only to use the URI, which makes this a bit of a weird exercise: you basically look for the terms as used in the text and hope to get an answer. I would prefer if the description of the term would be included, and maybe also synonyms","freewhy":""}},"_id":"vE7N37ii10wB8MbN"},{"date":1652124028154,"sent":{"profile":{"prof":"veryhigh","ttlexp":"medium","schemaexp":"low"},"tasks":[{"id":1,"schema":"data/foaf-shacledturtle.ttl","corpus":"data/text_foaf04.txt","time":159336,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n<charlie> a foaf:Person ;\\nfoaf:account <account> .\\n\\n<account> foaf:accountName \\"charlie13\\" ;\\nfoaf:accountServiceHomepage <https://example.org/bigcompany> .\\n\\n<bigcompany#this> a foaf:Group ;\\nfoaf:member <charlie>, _:someone ;\\nfoaf:homepage <https://example.org/bigcompany> .","stats":{"show":85,"click":8,"explicitelyAsked":3}},{"id":2,"schema":"data/foaf-naive.ttl","corpus":"data/text_foaf03.txt","time":160920,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n<alexa> a foaf:Person ;\\nfoaf:publications <pub> .\\n\\n<pub> foaf:name \\"The perfect self-portrait\\" ;\\nfoaf:primaryTopic <img.png> .\\n\\n<img.png> a foaf:Image ;\\nfoaf:depicts <alexa> ;\\nfoaf:thumbnail <ex.png> .","stats":{"show":133,"click":7,"explicitelyAsked":0}}],"feedback":{"toohard":"1","equaldifficulty":"4","succeed":"4","exp1usefull":"4","exp2usefull":"4","prefer1":"2","typingisok":"1","freetext":"","freewhy":""}},"_id":"PfxsOkaZXWWUNNUv"},{"date":1652169518523,"sent":{"profile":{"prof":"veryhigh","ttlexp":"low","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/foaf-naive.ttl","corpus":"data/text_foaf04.txt","time":427967,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:CharlieRed rdf:type foaf:Person; foaf:firstName \\"Charlie\\"; foaf:lastName \\"Red\\".\\n:CharlieRed foaf:account :CharlieAccount.\\n:CharlieAccount foaf:accountName \\"charlie13\\". \\n:service rdf:type foaf:Agent. \\n:service foaf:accountServiceHomepage \\"https://example.org/bigcompany\\".\\n:BigCompany rdf:type foaf:Group.\\n:BigCompany foaf:member :CharlieRed.\\n:BigCompany foaf:member :member_1.\\n:BigCompany foaf:homepage \\"https://example.org/bigcompany\\".\\n","stats":{"show":173,"click":16,"explicitelyAsked":8}},{"id":2,"schema":"data/foaf-shacledturtle.ttl","corpus":"data/text_foaf03.txt","time":279278,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:alexaBosquet rdf:type foaf:Person.\\n:alexaBosquet foaf:firstName \\"alexa\\".\\n:alexaBosquet foaf:lastName \\"Bosquet\\". \\n:alexaBosquet foaf:publications :publicationsList. \\n:publicationsList rdfs:label \\"The perfect self-portait\\".\\n:publicationsList foaf:primaryTopic :alexaTopic. \\n:alexaTopic rdf:type foaf:Image. \\n:alexaTopic foaf:depicts :alexaBosquet. \\n:alexaTopic foaf:maker :alexaBosquet. \\n:alexaTopic foaf:thumbnail \\"https://example.org/ex.png\\". ","stats":{"show":156,"click":21,"explicitelyAsked":0}}],"feedback":{"toohard":"4","equaldifficulty":"4","succeed":"3","exp1usefull":"5","exp2usefull":"5","prefer1":"3","typingisok":"2","freetext":"I did not know enough the foaf ontology to make a choice about blank nodes ","freewhy":""}},"_id":"b7JwNeM1AkNnArS2"},{"date":1652821250055,"sent":{"profile":{"prof":"medium","ttlexp":"low","schemaexp":"low"},"tasks":[{"id":1,"schema":"data/foaf-shacledturtle.ttl","corpus":"data/text_foaf04.txt","time":768546,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\nex:bob a foaf:Person; \\n       foaf:name \\"Charlie Red\\"; \\n       ex:has [ a foaf:OnlineAccount ; foaf:name \\"charlie13\\"; ex:held  [ a ex:Service  [ foaf:homepage ex:bigcompany]].\\nex:bibcompany a foaf:Group;\\n      ex:hasMember (ex:bob, [ a foaf:Person]);\\n      foaf:homepage ex:bigcompany.\\n     \\n   ","stats":{"show":259,"click":5,"explicitelyAsked":3}},{"id":2,"schema":"data/foaf-naive.ttl","corpus":"data/text_foaf03.txt","time":265050,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\nex:ab a foaf:Person; foaf:name \\"Alexa Bosquet\\"; foaf:publications [ a foaf:Document; foaf:name \\"The perfect self-portrait\\"; foaf:topic [ a foaf:Image; foaf:maker ex:ab; foaf:depicts ex:ab; foaf:thumbnail ex:ex.png]].\\n","stats":{"show":214,"click":6,"explicitelyAsked":0}}],"feedback":{"toohard":"5","equaldifficulty":"2","succeed":"1","exp1usefull":"5","exp2usefull":"5","prefer1":"3","typingisok":"4","freetext":"I liked the autocompletion and searched a lot for getting one working in the last years. I think it\'s the minimum people interested in the field should get for exploring and exercising! how come there is no one fully functional? All editors should be equiped (vim, emacs, vscode, etc.). My experiment in RDF was kind of disappointed, and the [Easier RDF](https://github.com/w3c/EasierRDF) was a relief, but with no effects unfortunately. RDF and all specs, will stay at a distance for the average scientist.","freewhy":"I didn\'t see any difference! I haven\'t practiced RDF for 3 years, and learnt by myself. The result seems disastrous!"}},"_id":"OenbTdnOgU2cBbYD"},{"date":1652770465757,"sent":{"profile":{"prof":"medium","ttlexp":"medium","schemaexp":"low"},"tasks":[{"id":1,"schema":"data/foaf-shacledturtle.ttl","corpus":"data/text_foaf03.txt","time":723999,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:abosquet_image rdf:type foaf:Image;\\nfoaf:depicts :abosquet;\\nfoaf:thumbnail \\"https://example.org/ex.png\\".\\n\\n:abosquet_paper1 rdf:type foaf:Document;\\nfoaf:name \\"The perfect self-portait\\" ;\\nfoaf:primaryTopic :abosquet_image .\\n\\n:abosquet rdf:type foaf:Person ;\\nfoaf:name \\"Alexa Bosquet\\" ;\\nfoaf:made :abosquet_paper1 .\\n","stats":{"show":149,"click":12,"explicitelyAsked":0}},{"id":2,"schema":"data/foaf-naive.ttl","corpus":"data/text_foaf04.txt","time":345055,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:bigc rdf:type foaf:Organization;\\nrdf:type foaf:Group;\\nfoaf:name \\"Big Company\\";\\nfoaf:homepage \\"https://example.org/bigcompany\\";\\nfoaf:member :cred;\\nfoaf:member :otherMember;\\n.\\n\\n:cred rdf:type foaf:Person;\\nfoaf:account :cred_account;\\n.\\n\\n:cred_account rdf:type foaf:OnlineAccount ;\\nfoaf:accountName \\"charlie13\\";\\nfoaf:accountServiceHomepage \\"https://example.org/bigcompany\\" ;\\n.\\n\\n:otherMember rdf:type foaf:Person;\\n.","stats":{"show":195,"click":12,"explicitelyAsked":0}}],"feedback":{"toohard":"4","equaldifficulty":"2","succeed":"5","exp1usefull":"4","exp2usefull":"5","prefer1":"3","typingisok":"2","freetext":"In task 1, thinking about the `foaf:name` property for giving a \\"title\\" to the \\"The perfect self-portait\\" document is counterintuitive; providing an auto-completion engine with semantic match between \\"name\\" and \\"title\\" could have helped me fulfilling the task quicker.","freewhy":"No preference."}},"_id":"g7qqWAst8JMkKn1a"},{"date":1652775055977,"sent":{"profile":{"prof":"low","ttlexp":"low","schemaexp":"medium"},"tasks":[{"id":1,"schema":"data/foaf-naive.ttl","corpus":"data/text_foaf03.txt","time":1425097,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:Alexa a foaf:Person;\\n       foaf:firstName \\"Alexa\\"; \\n       foaf:lastName \\"Bosquet\\";\\n       foaf:publications :Document .\\n\\n:Document a foaf:Document ;\\n          foaf:title \\"The perfect self-portrait\\" .\\n\\n:primaryTopic a foaf:primaryTopic ;\\n              foaf:isPrimaryTopicOf :Document .\\n\\n:Alexa foaf:made :primaryTopic ;\\n       foaf:depicts :primaryTopic .\\n\\n:primaryTopic foaf:thumbnail <https://example.org/ex.png> .\\n","stats":{"show":335,"click":19,"explicitelyAsked":2}},{"id":2,"schema":"data/foaf-shacledturtle.ttl","corpus":"data/text_foaf04.txt","time":835128,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:Charlie a foaf:Person ;\\n         foaf:firstName \\"Charlie\\" ;\\n         foaf:familyName \\"Red\\" ;\\n         foaf:account :account .\\n\\n:account foaf:accountName \\"charlie13\\" ; \\n         foaf:accountServiceHomepage \\"https://example.org/bigcompany\\" .\\n\\n:bigCompany a foaf:Group ;\\n            foaf:member :Charlie ;\\n            foaf:member :somebody .\\n\\n:somebody a foaf:Person .\\n\\n:bigCompany foaf:homepage \\"https://example.org/bigcompany\\" .","stats":{"show":189,"click":15,"explicitelyAsked":0}}],"feedback":{"toohard":"3","equaldifficulty":"4","succeed":"4","exp1usefull":"5","exp2usefull":"5","prefer1":"3","typingisok":"2","freetext":"I was interruped approximatly 10 minutes during the first task.","freewhy":""}},"_id":"i5cIZ5quPpiuXgNa"},{"date":1652788050506,"sent":{"profile":{"prof":"veryhigh","ttlexp":"medium","schemaexp":"low"},"tasks":[{"id":1,"schema":"data/foaf-naive.ttl","corpus":"data/text_foaf04.txt","time":235962,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:CharlieRed a foaf:Person ;\\n  foaf:account :CharliesAccount.\\n:CharliesAccount a foaf:OnlineAccount ;\\n  foaf:accountName \\"charlie13\\" ; \\n  foaf:accountServiceHomepage \\"https://example.org/bigcompany\\" .\\n:BigCompany a foaf:Group ; \\n  foaf:member :CharlieRed , :OtherMember ;\\n  foaf:homepage \\"https://example.org/bigcompany\\" .\\n\\n\\n","stats":{"show":158,"click":10,"explicitelyAsked":0}},{"id":2,"schema":"data/foaf-shacledturtle.ttl","corpus":"data/text_foaf03.txt","time":146390,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:Alexa a foaf:Person ; foaf:maker :Paper .\\n:Paper a foaf:Document ;\\n  foaf:name \\"The perfect self-portrait\\" . \\n:Image a foaf:Image ;\\n  foaf:depicts :Alexa ;\\n  foaf:thumbnail \\"https://example.org/ex.png\\" . ","stats":{"show":75,"click":9,"explicitelyAsked":5}}],"feedback":{"toohard":"4","equaldifficulty":"2","succeed":"4","exp1usefull":"4","exp2usefull":"3","prefer1":"5","typingisok":"4","freetext":"","freewhy":""}},"_id":"iAi4ENsSti0iIqt1"},{"date":1652886852932,"sent":{"profile":{"prof":"high","ttlexp":"high","schemaexp":"low"},"tasks":[{"id":1,"schema":"data/foaf-naive.ttl","corpus":"data/text_foaf03.txt","time":145920,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:ab a foaf:Person ; foaf:name \\"Alexa Bosquet\\" ; foaf:thumbnail <https://example.org/ex.png> .\\n:ab foaf:publications :pap .\\n:pap a foaf:Document ; foaf:name \\"The perfect self-portrait\\" ; foaf:primaryTopic [ foaf:depicts :ab ; foaf:maker :ab ] .","stats":{"show":163,"click":10,"explicitelyAsked":2}},{"id":2,"schema":"data/foaf-shacledturtle.ttl","corpus":"data/text_foaf04.txt","time":142373,"writtenText":"@base <http://example.org/> .\\n@prefix : <http://example.org/> .\\n@prefix ex: <http://example.org/> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix foaf: <http://xmlns.com/foaf/0.1/> .\\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\\n\\n:cr a foaf:Person ; foaf:account :acc .\\n:acc a foaf:OnlineAccount ; foaf:accountName \\"charlie13\\" ; foaf:accountServiceHomepage <https://example.org/bigcompany> .\\n<https://example.org/bigcompany> a foaf:Group ; foaf:name \\"Big Company\\" ; foaf:member :cr , :other ; foaf:homepage <https://example.org/bigcompany> .\\n","stats":{"show":127,"click":8,"explicitelyAsked":0}}],"feedback":{"toohard":"2","equaldifficulty":"4","succeed":"5","exp1usefull":"5","exp2usefull":"5","prefer1":"4","typingisok":"4","freetext":"","freewhy":""}},"_id":"uepPEFKb6Ywr81Hy"},{"_id":"mailed","date":1651749773000,"sent":{"profile":{"prof":"veryhigh","ttlexp":"medium","schemaexp":"low"},"tasks":[{"id":1,"schema":"data/foaf-shacledturtle.ttl","corpus":"data/text_foaf04.txt","time":988010,"writtenText":"XXX","stats":{"show":179,"click":15,"explicitelyAsked":0}},{"id":2,"schema":"data/foaf-naive.ttl","corpus":"data/text_foaf03.txt","time":1098665,"writtenText":"XXX","stats":{"show":229,"click":11,"explicitelyAsked":0}}],"feedback":{"toohard":"4","equaldifficulty":"4","succeed":"","exp1usefull":"3","exp2usefull":"3","prefer1":"3","typingisok":"3","freetext":"Difficult to perform if you dont have a goog knowledge of foaf vocabulary. It would be nice if the suggestion allow you to see the definition of the terms (as I said before Ispent most of my time to consult the specification of faof).\\nAnd since after completing the first exercice , I had a better knowledge of foaf, it was easier for me to realize the second exercice (indepently of the suggestions provided) ","freewhy":"I did not notice that there were two distinct suggestion engines. Because of my lack of knowledge of foaf, I had to refer to the documentation http://xmlns.com/foaf/spec/, and to know the semantic of Classes and Predicates. I spent most of my time to figure out the meaning of the terms of foaf:"}}}]');